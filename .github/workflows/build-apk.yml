name: Build Private APK

on:
  # Manual run from Actions tab
  workflow_dispatch:

  # Auto-run when you publish a GitHub Release
  release:
    types: [published]

  # Also run on pushes to main and on version tags
  push:
    branches: ["main"]
    tags: ["v*"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify Android wrapper exists
        run: |
          if [ ! -d "android/app/src/main" ]; then
            echo "::error::android/ wrapper not found. Ensure android/ is at repo root with a Gradle project."
            exit 1
          fi

      - name: Prepare assets (ensure index.html and app.settings.json)
        env:
          SHEETS_ENDPOINT: ${{ secrets.SHEETS_ENDPOINT }}
        run: |
          set -e
          mkdir -p android/app/src/main/assets

          # index.html must be at repo root
          if [ -f "index.html" ]; then
            cp index.html android/app/src/main/assets/index.html
          else
            echo "::error::index.html not found at repo root."
            exit 1
          fi

          # app.settings.json: use file if present, else create from secret
          if [ -f "app.settings.json" ]; then
            cp app.settings.json android/app/src/main/assets/app.settings.json
          else
            if [ -n "$SHEETS_ENDPOINT" ]; then
              cat > android/app/src/main/assets/app.settings.json <<EOF
{
  "sheetsEndpoint": "${SHEETS_ENDPOINT}",
  "cooldownDays": 90
}
EOF
              echo "Created app.settings.json from SHEETS_ENDPOINT secret."
            else
              echo "::error::app.settings.json missing AND SHEETS_ENDPOINT secret not set."
              exit 1
            fi
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Decode keystore
        run: |
          set -e
          if [ -z "${{ secrets.KEYSTORE }}" ]; then
            echo "::error::KEYSTORE secret is missing (Base64 of your .keystore)."
            exit 1
          fi
          echo "${{ secrets.KEYSTORE }}" | base64 -d > android/keystore.jks

      - name: Configure signing (gradle.properties)
        run: |
          cat >> android/gradle.properties <<EOF
MYAPP_UPLOAD_STORE_FILE=keystore.jks
MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}
MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.KEY_ALIAS }}
MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.KEY_ALIAS_PASSWORD }}
EOF

      - name: Grant gradlew execute
        run: chmod +x android/gradlew || true

      - name: Build release
        working-directory: android
        run: ./gradlew assembleRelease

      - name: Upload APK artifact (for manual/push runs)
        uses: actions/upload-artifact@v4
        with:
          name: cascade_canvass_apk
          path: android/app/build/outputs/apk/release/*.apk

  release:
    needs: build
    # Run this job for version tags (v*) or when GitHub Release is published
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: cascade_canvass_apk
          path: dist

      - name: Attach APK to Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
